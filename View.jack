class View {
  field int length;
  field Snake snake;
  field Block target;
  field int dir;

  static boolean terminated;
  static int speed;
  static int luckyNum;
  static Array usedLuckNum;

  constructor View init(int l) {
    var int userSeed;
    let luckyNum = View.askSeed();
    do Screen.clearScreen();
    do Rand.setSeed(luckyNum);
    do Block.setBlockInfo(10, 1);
    let length = l;
    let snake = Snake.init(length);
    let target = Block.newRandBlock(snake, length);
    let dir = 1;
    let speed = 5000;
    let terminated = false;
    do Sys.wait(speed);
    return this;
  }

  function int askSeed() {
    // Unable to check type due to design of Jack language
    var int userSeed;
    var String message1, message2, message3;
    let message1 = "Choose your lucky number (1~99).";
    let message2 = "Hit enter after you've done choosen: ";
    let message3 = "Invalid number. Choose again (1~99): ";
    do Output.printString(message1);
    do Output.println();
    let userSeed = Keyboard.readInt(message2); 
    do Output.println();
    while ((userSeed > 99) | (userSeed < 0)) {
      do Output.println();
      let userSeed = Keyboard.readInt(message3);
    }
    do message1.dispose();
    do message2.dispose();
    do message3.dispose();
    return userSeed;
  }
 
  method void move() {
    var int key;
    var boolean matched;
    while (~(terminated)) {
      let terminated = true;
      let key = Keyboard.keyPressed();
      if ((key = 132) & ~(dir = 2)) {let dir = 1;}
      if ((key = 130) & ~(dir = 1)) {let dir = 2;}
      if ((key = 131) & ~(dir = 4)) {let dir = 3;}
      if ((key = 133) & ~(dir = 3)) {let dir = 4;}
      let matched = Block.matched(snake[length - 1], target, dir);
      if (matched) {
        let snake = Snake.lengthenSnake(snake, length, target);
        let length = length + 1;     
        let target = Block.newRandBlock(snake, length);
        if (length = 10) {let speed = 4000;}
        if (length = 20) {let speed = 3000;}
        if (length = 25) {let speed = 2500;}
        if (length = 30) {let speed = 2000;}
        if (length = 40) {let speed = 1000;}
        if (length = 50) {let speed = 500;}
      } else {
        do Snake.moveSnake(snake, length, dir);
      }
      do Sys.wait(speed);
      let terminated = false;
    }
    return;
  }

  method void dispose() {
    do Snake.dispose(snake, length);
    do Block.dispose(target);
    do Memory.deAlloc(this);
    return;
  }
}
