class View {
  field int length;
  field Snake snake;
  field Block target;
  field int dir;

  static boolean terminated;
  static int speed;

  constructor View init(int l) {
    do Rand.setSeed(17);
    do Block.setBlockInfo(10, 1);
    let length = l;
    let snake = Snake.init(length);
    let target = Block.newRandBlock();
    let dir = 1;
    let speed = 5000;
    let terminated = false;
    do Sys.wait(speed);
    return this;
  }
 
  method void move() {
    var int key;
    var boolean matched;
    while (~(terminated)) {
      let terminated = true;
      let key = Keyboard.keyPressed();
      if ((key = 132) & ~(dir = 2)) {let dir = 1;}
      if ((key = 130) & ~(dir = 1)) {let dir = 2;}
      if ((key = 131) & ~(dir = 4)) {let dir = 3;}
      if ((key = 133) & ~(dir = 3)) {let dir = 4;}
      let matched = Block.matched(snake[length - 1], target, dir);
      if (matched) {
        let snake = Snake.lengthenSnake(snake, length, target);
        let target = Block.newRandBlock();
        let length = length + 1;
      } else {
        do Snake.moveSnake(snake, length, dir);
      }
      if (length = 10) {let speed = 4000;}
      if (length = 20) {let speed = 3000;}
      if (length = 30) {let speed = 2000;}
      if (length = 40) {let speed = 1000;}
      if (length = 50) {let speed = 500;}
      if (length = 60) {let speed = 250;}
      if (length = 70) {let speed = 100;}
      do Sys.wait(speed);
      let terminated = false;
    }
    return;
  }

  method void dispose() {
    do Snake.dispose(snake, length);
    do Block.dispose(target);
    do Memory.deAlloc(this);
    return;
  }
}
